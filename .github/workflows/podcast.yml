name: Weekly AI Executive Brief

on:
  schedule:
    # 14:05 UTC = 08:05 MT during DST (MDT), 07:05 MST otherwise
    - cron: '5 14 * * 1'
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      # Generate audio + transcript (.mp3 and .txt in audio/)
      - name: Generate MP3 + transcript
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ELEVENLABS_API_KEY: ${{ secrets.ELEVENLABS_API_KEY }}
          ELEVENLABS_VOICE_ID: M7ya1YbaeFaPXljg9BpK
        run: |
          python scripts/generate_brief.py

      # Update RSS feed to latest audio
      - name: Update feed.xml
        run: |
          python scripts/update_feed.py \
            --repo-url "https://kyledeguire.github.io/ai-news-audio-feed" \
            --audio-dir "audio" \
            --feed "feed.xml" \
            --show-title "AI News Weekly - Executive Briefing" \
            --show-description "Weekly AI news analysis and strategic insights for business leaders" \
            --language "en-us"

      # Commit changes (audio/*.mp3, audio/*.txt, feed.xml)
      - name: Commit audio + feed
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: weekly brief - audio + transcript + feed"
          file_pattern: |
            audio/*.mp3
            audio/*.txt
            feed.xml

      # Find latest transcript and build email meta (pure bash; no heredoc)
      - name: Find latest transcript & build email meta
        id: latest
        shell: bash
        run: |
          set -euo pipefail
          LATEST_TXT=$(ls -t audio/*.txt | head -n1)
          LATEST_MP3="${LATEST_TXT%.txt}.mp3"
          STAMP="${LATEST_TXT##*_}"      # e.g., 20250915.txt
          STAMP="${STAMP%.txt}"          # 20250915
          READABLE_DATE=$(date -d "${STAMP:0:4}-${STAMP:4:2}-${STAMP:6:2}" +"%A, %B %d, %Y")
          {
            echo "txt=${LATEST_TXT}"
            echo "mp3file=$(basename "$LATEST_MP3")"
            echo "date_readable=${READABLE_DATE}"
          } >> "$GITHUB_OUTPUT"

      # Read transcript into env for email body
      - name: Read transcript into env
        shell: bash
        run: |
          echo 'TRANSCRIPT<<EOF' >> "$GITHUB_ENV"
          cat "${{ steps.latest.outputs.txt }}" >> "$GITHUB_ENV"
          echo 'EOF' >> "$GITHUB_ENV"

      # Email the transcript (attachment + body)
      - name: Email transcript
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_SERVER }}
          server_port: "${{ secrets.SMTP_PORT }}"
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: "AI Executive Brief transcript â€” ${{ steps.latest.outputs.date_readable }}"
          from: ${{ secrets.EMAIL_FROM }}
          to: ${{ secrets.EMAIL_TO }}
          secure: true
          attachments: "${{ steps.latest.outputs.txt }}"
          body: |
            New episode transcript attached.

            Episode date: ${{ steps.latest.outputs.date_readable }}
            Feed: https://kyledeguire.github.io/ai-news-audio-feed/feed.xml
            Audio: https://kyledeguire.github.io/ai-news-audio-feed/audio/${{ steps.latest.outputs.mp3file }}

            ---- Transcript ----
            ${{ env.TRANSCRIPT }}
